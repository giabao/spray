{"body": "<div class=\"section\" id=\"jsonpwithparameter\">\n<span id=\"id1\"></span><h1>jsonpWithParameter</h1>\n<p>Wraps a response of type <tt class=\"docutils literal\"><span class=\"pre\">application/json</span></tt> with an invocation to a callback function which name is given as an\nargument. The new type of the response is <tt class=\"docutils literal\"><span class=\"pre\">application/javascript</span></tt>.</p>\n<div class=\"section\" id=\"signature\">\n<h2>Signature</h2>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"n\">jsonpWithParameter</span><span class=\"o\">(</span><span class=\"n\">parameterName</span><span class=\"k\">:</span> <span class=\"kt\">String</span><span class=\"o\">)</span><span class=\"k\">:</span> <span class=\"kt\">Directive0</span> \n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"description\">\n<h2>Description</h2>\n<p>Find more information about JSONP in <a class=\"reference external\" href=\"http://en.wikipedia.org/wiki/JSONP\">Wikipedia</a>. Note that JSONP is not considered the solution of choice for\nmany reasons. Be sure to understand its drawbacks and security implications.</p>\n</div>\n<div class=\"section\" id=\"example\">\n<h2>Example</h2>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">case</span> <span class=\"k\">class</span> <span class=\"nc\">Test</span><span class=\"o\">(</span><span class=\"n\">abc</span><span class=\"k\">:</span> <span class=\"kt\">Int</span><span class=\"o\">)</span>\n<span class=\"k\">object</span> <span class=\"nc\">TestProtocol</span> <span class=\"o\">{</span>\n  <span class=\"k\">import</span> <span class=\"nn\">spray.json.DefaultJsonProtocol._</span>\n  <span class=\"k\">implicit</span> <span class=\"k\">val</span> <span class=\"n\">testFormat</span> <span class=\"k\">=</span> <span class=\"n\">jsonFormat</span><span class=\"o\">(</span><span class=\"nc\">Test</span><span class=\"o\">,</span> <span class=\"s\">&quot;abc&quot;</span><span class=\"o\">)</span>\n<span class=\"o\">}</span>\n<span class=\"k\">val</span> <span class=\"n\">route</span> <span class=\"k\">=</span>\n  <span class=\"n\">jsonpWithParameter</span><span class=\"o\">(</span><span class=\"s\">&quot;jsonp&quot;</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"k\">import</span> <span class=\"nn\">TestProtocol._</span>\n    <span class=\"k\">import</span> <span class=\"nn\">spray.httpx.SprayJsonSupport._</span>\n    <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"nc\">Test</span><span class=\"o\">(</span><span class=\"mi\">456</span><span class=\"o\">))</span>\n  <span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/?jsonp=result&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span>\n    <span class=\"s\">&quot;&quot;&quot;result({</span>\n<span class=\"s\">      |  &quot;abc&quot;: 456</span>\n<span class=\"s\">      |})&quot;&quot;&quot;</span><span class=\"o\">.</span><span class=\"n\">stripMargin</span>\n  <span class=\"n\">contentType</span> <span class=\"o\">===</span> <span class=\"nc\">MediaTypes</span><span class=\"o\">.</span><span class=\"n\">`application/javascript`</span><span class=\"o\">.</span><span class=\"n\">withCharset</span><span class=\"o\">(</span><span class=\"nc\">HttpCharsets</span><span class=\"o\">.</span><span class=\"n\">`UTF-8`</span><span class=\"o\">)</span>\n<span class=\"o\">}</span>\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span>\n    <span class=\"s\">&quot;&quot;&quot;{</span>\n<span class=\"s\">      |  &quot;abc&quot;: 456</span>\n<span class=\"s\">      |}&quot;&quot;&quot;</span><span class=\"o\">.</span><span class=\"n\">stripMargin</span>\n  <span class=\"n\">contentType</span> <span class=\"o\">===</span> <span class=\"nc\">ContentTypes</span><span class=\"o\">.</span><span class=\"n\">`application/json`</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n</div>\n</div>\n", "display_toc": true, "title": "jsonpWithParameter", "sourcename": "", "customsidebar": null, "current_page_name": "documentation/spray-routing/misc-directives/jsonpWithParameter", "next": {"link": "../rejectEmptyResponse/", "title": "rejectEmptyResponse"}, "rellinks": [["genindex", "General Index", "I", "index"], ["documentation/spray-routing/misc-directives/rejectEmptyResponse", "rejectEmptyResponse", "N", "next"], ["documentation/spray-routing/misc-directives/clientIP", "clientIP", "P", "previous"]], "meta": {}, "parents": [{"link": "../../../", "title": "Documentation"}, {"link": "../../", "title": "spray-routing"}, {"link": "../../predefined-directives-by-trait/", "title": "Predefined Directives (by trait)"}, {"link": "../", "title": "MiscDirectives"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">jsonpWithParameter</a><ul>\n<li><a class=\"reference internal\" href=\"#signature\">Signature</a></li>\n<li><a class=\"reference internal\" href=\"#description\">Description</a></li>\n<li><a class=\"reference internal\" href=\"#example\">Example</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../clientIP/", "title": "clientIP"}, "metatags": ""}