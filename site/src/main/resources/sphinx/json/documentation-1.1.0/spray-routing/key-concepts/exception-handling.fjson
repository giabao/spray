{"body": "<div class=\"section\" id=\"exception-handling\">\n<span id=\"id1\"></span><h1>Exception Handling</h1>\n<p>Exceptions thrown during route execution bubble up throw the route structure up to the next enclosing\n<a class=\"reference internal\" href=\"../../execution-directives/handleExceptions/#handleexceptions\"><em>handleExceptions</em></a> directive, <a class=\"reference internal\" href=\"../big-picture/#runroute\"><em>The runRoute Wrapper</em></a> or the <tt class=\"docutils literal\"><span class=\"pre\">onFailure</span></tt> callback of a\nfuture created by <tt class=\"docutils literal\"><span class=\"pre\">detach</span></tt>.</p>\n<p>Similarly to the way that <a class=\"reference internal\" href=\"../rejections/#rejections\"><em>Rejections</em></a> are handled the <a class=\"reference internal\" href=\"../../execution-directives/handleExceptions/#handleexceptions\"><em>handleExceptions</em></a> directive delegates the actual job of\nconverting a list of rejections to its argument, an <a class=\"reference external\" href=\"https://github.com/spray/spray/blob/master/spray-routing/src/main/scala/spray/routing/ExceptionHandler.scala\">ExceptionHandler</a>, which is defined like this:</p>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">trait</span> <span class=\"nc\">ExceptionHandler</span> <span class=\"k\">extends</span> <span class=\"nc\">PartialFunction</span><span class=\"o\">[</span><span class=\"kt\">Throwable</span>, <span class=\"kt\">Route</span><span class=\"o\">]</span>\n</pre></div>\n</div>\n<p><a class=\"reference internal\" href=\"../big-picture/#runroute\"><em>The runRoute Wrapper</em></a> defined in <a class=\"reference internal\" href=\"../big-picture/#httpservice\"><em>The HttpService</em></a> does the same but gets its <tt class=\"docutils literal\"><span class=\"pre\">ExceptionHandler</span></tt> instance\nimplicitly.</p>\n<p>Since an <tt class=\"docutils literal\"><span class=\"pre\">ExceptionHandler</span></tt> is a partial function it can choose, which exceptions it would like to handle and\nwhich not. Unhandled exceptions will simply continue to bubble up in the route structure. The top-most\n<tt class=\"docutils literal\"><span class=\"pre\">ExceptionHandler</span></tt> applied by <a class=\"reference internal\" href=\"../big-picture/#runroute\"><em>The runRoute Wrapper</em></a> will handle <em>all</em> exceptions that reach it.</p>\n<p>So, if you&#8217;d like to customize the way certain exceptions are handled simply bring a custom <tt class=\"docutils literal\"><span class=\"pre\">ExceptionHandler</span></tt> into\nimplicit scope of <a class=\"reference internal\" href=\"../big-picture/#runroute\"><em>The runRoute Wrapper</em></a> or pass it to an explicit <a class=\"reference internal\" href=\"../../execution-directives/handleExceptions/#handleexceptions\"><em>handleExceptions</em></a> directive that you\nhave put somewhere into your route structure.</p>\n<p>Here is an example:</p>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">import</span> <span class=\"nn\">spray.util.LoggingContext</span>\n<span class=\"k\">import</span> <span class=\"nn\">spray.http.StatusCodes._</span>\n<span class=\"k\">import</span> <span class=\"nn\">spray.routing._</span>\n\n<span class=\"k\">implicit</span> <span class=\"k\">def</span> <span class=\"n\">myExceptionHandler</span><span class=\"o\">(</span><span class=\"k\">implicit</span> <span class=\"n\">log</span><span class=\"k\">:</span> <span class=\"kt\">LoggingContext</span><span class=\"o\">)</span> <span class=\"k\">=</span>\n  <span class=\"nc\">ExceptionHandler</span> <span class=\"o\">{</span>\n    <span class=\"k\">case</span> <span class=\"n\">e</span><span class=\"k\">:</span> <span class=\"kt\">ArithmeticException</span> <span class=\"o\">=&gt;</span>\n      <span class=\"n\">requestUri</span> <span class=\"o\">{</span> <span class=\"n\">uri</span> <span class=\"k\">=&gt;</span>\n        <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"o\">(</span><span class=\"s\">&quot;Request to {} could not be handled normally&quot;</span><span class=\"o\">,</span> <span class=\"n\">uri</span><span class=\"o\">)</span>\n        <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"nc\">InternalServerError</span><span class=\"o\">,</span> <span class=\"s\">&quot;Bad numbers, bad result!!!&quot;</span><span class=\"o\">)</span>\n      <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyService</span> <span class=\"k\">extends</span> <span class=\"nc\">HttpServiceActor</span> <span class=\"o\">{</span>\n  <span class=\"k\">def</span> <span class=\"n\">receive</span> <span class=\"k\">=</span> <span class=\"n\">runRoute</span> <span class=\"o\">{</span>\n    <span class=\"n\">`&lt;my-route-definition&gt;`</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n</div>\n", "display_toc": false, "title": "Exception Handling", "sourcename": "", "customsidebar": null, "current_page_name": "documentation/spray-routing/key-concepts/exception-handling", "next": {"link": "../timeout-handling/", "title": "Timeout Handling"}, "rellinks": [["genindex", "General Index", "I", "index"], ["documentation/spray-routing/key-concepts/timeout-handling", "Timeout Handling", "N", "next"], ["documentation/spray-routing/key-concepts/rejections", "Rejections", "P", "previous"]], "meta": {}, "parents": [{"link": "../../../", "title": "Documentation"}, {"link": "../../", "title": "spray-routing"}, {"link": "../", "title": "Key Concepts"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Exception Handling</a></li>\n</ul>\n", "prev": {"link": "../rejections/", "title": "Rejections"}, "metatags": ""}