{"body": "<div class=\"section\" id=\"authenticate\">\n<span id=\"id1\"></span><h1>authenticate</h1>\n<p>Authenticates a request by checking credentials supplied in the request and extracts a value\nrepresenting the authenticated principal.</p>\n<div class=\"section\" id=\"signature\">\n<h2>Signature</h2>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"n\">authenticate</span><span class=\"o\">[</span><span class=\"kt\">T</span><span class=\"o\">](</span><span class=\"n\">auth</span><span class=\"k\">:</span> <span class=\"k\">\u21d2</span> <span class=\"kt\">Future</span><span class=\"o\">[</span><span class=\"kt\">Authentication</span><span class=\"o\">[</span><span class=\"kt\">T</span><span class=\"o\">]])(</span><span class=\"k\">implicit</span> <span class=\"n\">executor</span><span class=\"k\">:</span> <span class=\"kt\">ExecutionContext</span><span class=\"o\">)</span><span class=\"k\">:</span> <span class=\"kt\">Directive1</span><span class=\"o\">[</span><span class=\"kt\">T</span><span class=\"o\">]</span>\n<span class=\"k\">def</span> <span class=\"n\">authenticate</span><span class=\"o\">[</span><span class=\"kt\">T</span><span class=\"o\">](</span><span class=\"n\">auth</span><span class=\"k\">:</span> <span class=\"kt\">ContextAuthenticator</span><span class=\"o\">[</span><span class=\"kt\">T</span><span class=\"o\">])(</span><span class=\"k\">implicit</span> <span class=\"n\">executor</span><span class=\"k\">:</span> <span class=\"kt\">ExecutionContext</span><span class=\"o\">)</span><span class=\"k\">:</span> <span class=\"kt\">Directive1</span><span class=\"o\">[</span><span class=\"kt\">T</span><span class=\"o\">]</span>\n</pre></div>\n</div>\n<p>The signature shown is simplified, the real signature uses magnets. <a class=\"footnote-reference\" href=\"#id3\" id=\"id2\">[1]</a></p>\n<table class=\"docutils footnote\" frame=\"void\" id=\"id3\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id2\">[1]</a></td><td>See <a class=\"reference external\" href=\"/blog/2012-12-13-the-magnet-pattern/\">The Magnet Pattern</a> for an explanation of magnet-based overloading.</td></tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"description\">\n<h2>Description</h2>\n<p>On the lowest level, <tt class=\"docutils literal\"><span class=\"pre\">authenticate</span></tt>, takes either a <tt class=\"docutils literal\"><span class=\"pre\">Future[Authentication[T]]</span></tt> which\nauthenticates based on values from the lexical scope or a value of type\n<tt class=\"docutils literal\"><span class=\"pre\">ContextAuthenticator[T]</span> <span class=\"pre\">=</span> <span class=\"pre\">RequestContext</span> <span class=\"pre\">\u21d2</span> <span class=\"pre\">Future[Authentication[T]]</span></tt> which\nextracts authentication data from the <tt class=\"docutils literal\"><span class=\"pre\">RequestContext</span></tt>. The returned value of type <tt class=\"docutils literal\"><span class=\"pre\">Authentication[T]</span></tt> must\neither be the authenticated principal which will be supplied to the inner route or a rejection to reject the request\nwith if authentication failed .</p>\n<p>Both variants return futures so that the actual authentication procedure runs detached from route processing\nand processing of the inner route will be continued once the authentication finished. This\nallows longer-running authentication tasks (like looking up credentials in a database) to run without blocking\nthe <tt class=\"docutils literal\"><span class=\"pre\">HttpService</span></tt> actor, freeing it for other requests. The <tt class=\"docutils literal\"><span class=\"pre\">authenticate</span></tt> directive itself\nisn&#8217;t tied to any HTTP-specific details so that various authentication schemes can be implemented\non top of <tt class=\"docutils literal\"><span class=\"pre\">authenticate</span></tt>.</p>\n<p>Standard HTTP-based authentication which uses the <tt class=\"docutils literal\"><span class=\"pre\">WWW-Authenticate</span></tt> header containing challenge\ndata and <tt class=\"docutils literal\"><span class=\"pre\">Authorization</span></tt> header for receiving credentials is implemented in subclasses of <tt class=\"docutils literal\"><span class=\"pre\">HttpAuthenticator</span></tt>.</p>\n<div class=\"section\" id=\"http-basic-authentication\">\n<h3>HTTP Basic Authentication</h3>\n<p><em>spray</em> supports <a class=\"reference external\" href=\"http://en.wikipedia.org/wiki/Basic_auth\">HTTP basic authentication</a> through the <tt class=\"docutils literal\"><span class=\"pre\">BasicHttpAuthenticator</span></tt> and provides a series of\nconvenience constructors for different scenarios with <tt class=\"docutils literal\"><span class=\"pre\">BasicAuth()</span></tt>. Make sure to use basic authentication only over\nSSL because credentials are transferred in plaintext.</p>\n<div class=\"section\" id=\"implementing-a-userpassauthenticator\">\n<h4>Implementing a <tt class=\"docutils literal\"><span class=\"pre\">UserPassAuthenticator</span></tt></h4>\n<p>The most generic way of deploying HTTP basic authentication uses a <tt class=\"docutils literal\"><span class=\"pre\">UserPassAuthenticator</span></tt> to validate a user/password\ncombination. It is defined like this:</p>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">type</span> <span class=\"kt\">UserPassAuthenticator</span><span class=\"o\">[</span><span class=\"kt\">T</span><span class=\"o\">]</span> <span class=\"k\">=</span> <span class=\"nc\">Option</span><span class=\"o\">[</span><span class=\"kt\">UserPass</span><span class=\"o\">]</span> <span class=\"k\">\u21d2</span> <span class=\"nc\">Future</span><span class=\"o\">[</span><span class=\"kt\">Option</span><span class=\"o\">[</span><span class=\"kt\">T</span><span class=\"o\">]]</span>\n</pre></div>\n</div>\n<p>Its job is to map a user/password combination (if existent in the request) to an authenticated custom principal of type\n<tt class=\"docutils literal\"><span class=\"pre\">T</span></tt> (if authenticated).</p>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"n\">myUserPassAuthenticator</span><span class=\"o\">(</span><span class=\"n\">userPass</span><span class=\"k\">:</span> <span class=\"kt\">Option</span><span class=\"o\">[</span><span class=\"kt\">UserPass</span><span class=\"o\">])</span><span class=\"k\">:</span> <span class=\"kt\">Future</span><span class=\"o\">[</span><span class=\"kt\">Option</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]]</span> <span class=\"k\">=</span>\n  <span class=\"nc\">Future</span> <span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">userPass</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"o\">(</span><span class=\"n\">up</span> <span class=\"k\">=&gt;</span> <span class=\"n\">up</span><span class=\"o\">.</span><span class=\"n\">user</span> <span class=\"o\">==</span> <span class=\"s\">&quot;John&quot;</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">up</span><span class=\"o\">.</span><span class=\"n\">pass</span> <span class=\"o\">==</span> <span class=\"s\">&quot;p4ssw0rd&quot;</span><span class=\"o\">))</span> <span class=\"nc\">Some</span><span class=\"o\">(</span><span class=\"s\">&quot;John&quot;</span><span class=\"o\">)</span>\n    <span class=\"k\">else</span> <span class=\"nc\">None</span>\n  <span class=\"o\">}</span>\n\n<span class=\"k\">val</span> <span class=\"n\">route</span> <span class=\"k\">=</span>\n  <span class=\"n\">sealRoute</span> <span class=\"o\">{</span>\n    <span class=\"n\">path</span><span class=\"o\">(</span><span class=\"s\">&quot;secured&quot;</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n      <span class=\"n\">authenticate</span><span class=\"o\">(</span><span class=\"nc\">BasicAuth</span><span class=\"o\">(</span><span class=\"n\">myUserPassAuthenticator</span> <span class=\"k\">_</span><span class=\"o\">,</span> <span class=\"n\">realm</span> <span class=\"k\">=</span> <span class=\"s\">&quot;secure site&quot;</span><span class=\"o\">))</span> <span class=\"o\">{</span> <span class=\"n\">userName</span> <span class=\"k\">=&gt;</span>\n        <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"s\">&quot;The user is &#39;$userName&#39;&quot;</span><span class=\"o\">)</span>\n      <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/secured&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">status</span> <span class=\"o\">===</span> <span class=\"nc\">StatusCodes</span><span class=\"o\">.</span><span class=\"nc\">Unauthorized</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;The resource requires authentication, which was not supplied with the request&quot;</span>\n  <span class=\"n\">header</span><span class=\"o\">[</span><span class=\"kt\">HttpHeaders.`WWW-Authenticate`</span><span class=\"o\">].</span><span class=\"n\">get</span><span class=\"o\">.</span><span class=\"n\">challenges</span><span class=\"o\">.</span><span class=\"n\">head</span> <span class=\"o\">===</span> <span class=\"nc\">HttpChallenge</span><span class=\"o\">(</span><span class=\"s\">&quot;Basic&quot;</span><span class=\"o\">,</span> <span class=\"s\">&quot;secure site&quot;</span><span class=\"o\">)</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">val</span> <span class=\"n\">validCredentials</span> <span class=\"k\">=</span> <span class=\"nc\">BasicHttpCredentials</span><span class=\"o\">(</span><span class=\"s\">&quot;John&quot;</span><span class=\"o\">,</span> <span class=\"s\">&quot;p4ssw0rd&quot;</span><span class=\"o\">)</span>\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/secured&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span>\n  <span class=\"n\">addCredentials</span><span class=\"o\">(</span><span class=\"n\">validCredentials</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"c1\">// adds Authorization header</span>\n  <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;The user is &#39;John&#39;&quot;</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">val</span> <span class=\"n\">invalidCredentials</span> <span class=\"k\">=</span> <span class=\"nc\">BasicHttpCredentials</span><span class=\"o\">(</span><span class=\"s\">&quot;Peter&quot;</span><span class=\"o\">,</span> <span class=\"s\">&quot;pan&quot;</span><span class=\"o\">)</span>\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/secured&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span>\n  <span class=\"n\">addCredentials</span><span class=\"o\">(</span><span class=\"n\">invalidCredentials</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span>  <span class=\"c1\">// adds Authorization header</span>\n  <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n    <span class=\"n\">status</span> <span class=\"o\">===</span> <span class=\"nc\">StatusCodes</span><span class=\"o\">.</span><span class=\"nc\">Unauthorized</span>\n    <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;The supplied authentication is invalid&quot;</span>\n    <span class=\"n\">header</span><span class=\"o\">[</span><span class=\"kt\">HttpHeaders.`WWW-Authenticate`</span><span class=\"o\">].</span><span class=\"n\">get</span><span class=\"o\">.</span><span class=\"n\">challenges</span><span class=\"o\">.</span><span class=\"n\">head</span> <span class=\"o\">===</span> <span class=\"nc\">HttpChallenge</span><span class=\"o\">(</span><span class=\"s\">&quot;Basic&quot;</span><span class=\"o\">,</span> <span class=\"s\">&quot;secure site&quot;</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"from-configuration\">\n<h4>From configuration</h4>\n<p>There are several overloads to configure users from the configuration file. Obviously, this is neither a secure\n(plaintext passwords) nor a scalable approach. If you don&#8217;t pass in a custom config users are configured from\nthe <a class=\"reference internal\" href=\"../../configuration/#routing-configuration\"><em>Configuration</em></a> path <tt class=\"docutils literal\"><span class=\"pre\">spray.routing.users</span></tt>.</p>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"n\">extractUser</span><span class=\"o\">(</span><span class=\"n\">userPass</span><span class=\"k\">:</span> <span class=\"kt\">UserPass</span><span class=\"o\">)</span><span class=\"k\">:</span> <span class=\"kt\">String</span> <span class=\"o\">=</span> <span class=\"n\">userPass</span><span class=\"o\">.</span><span class=\"n\">user</span>\n<span class=\"k\">val</span> <span class=\"n\">config</span> <span class=\"k\">=</span> <span class=\"nc\">ConfigFactory</span><span class=\"o\">.</span><span class=\"n\">parseString</span><span class=\"o\">(</span><span class=\"s\">&quot;John = p4ssw0rd&quot;</span><span class=\"o\">)</span>\n\n<span class=\"k\">val</span> <span class=\"n\">route</span> <span class=\"k\">=</span>\n  <span class=\"n\">sealRoute</span> <span class=\"o\">{</span>\n    <span class=\"n\">path</span><span class=\"o\">(</span><span class=\"s\">&quot;secured&quot;</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n      <span class=\"n\">authenticate</span><span class=\"o\">(</span><span class=\"nc\">BasicAuth</span><span class=\"o\">(</span><span class=\"n\">realm</span> <span class=\"k\">=</span> <span class=\"s\">&quot;secure site&quot;</span><span class=\"o\">,</span> <span class=\"n\">config</span> <span class=\"k\">=</span> <span class=\"n\">config</span><span class=\"o\">,</span> <span class=\"n\">createUser</span> <span class=\"k\">=</span> <span class=\"n\">extractUser</span> <span class=\"k\">_</span><span class=\"o\">))</span> <span class=\"o\">{</span> <span class=\"n\">userName</span> <span class=\"k\">=&gt;</span>\n        <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"s\">&quot;The user is &#39;$userName&#39;&quot;</span><span class=\"o\">)</span>\n      <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/secured&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">status</span> <span class=\"o\">===</span> <span class=\"nc\">StatusCodes</span><span class=\"o\">.</span><span class=\"nc\">Unauthorized</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;The resource requires authentication, which was not supplied with the request&quot;</span>\n  <span class=\"n\">header</span><span class=\"o\">[</span><span class=\"kt\">HttpHeaders.`WWW-Authenticate`</span><span class=\"o\">].</span><span class=\"n\">get</span><span class=\"o\">.</span><span class=\"n\">challenges</span><span class=\"o\">.</span><span class=\"n\">head</span> <span class=\"o\">===</span> <span class=\"nc\">HttpChallenge</span><span class=\"o\">(</span><span class=\"s\">&quot;Basic&quot;</span><span class=\"o\">,</span> <span class=\"s\">&quot;secure site&quot;</span><span class=\"o\">)</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">val</span> <span class=\"n\">validCredentials</span> <span class=\"k\">=</span> <span class=\"nc\">BasicHttpCredentials</span><span class=\"o\">(</span><span class=\"s\">&quot;John&quot;</span><span class=\"o\">,</span> <span class=\"s\">&quot;p4ssw0rd&quot;</span><span class=\"o\">)</span>\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/secured&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span>\n  <span class=\"n\">addCredentials</span><span class=\"o\">(</span><span class=\"n\">validCredentials</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span>  <span class=\"c1\">// adds Authorization header</span>\n  <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;The user is &#39;John&#39;&quot;</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">val</span> <span class=\"n\">invalidCredentials</span> <span class=\"k\">=</span> <span class=\"nc\">BasicHttpCredentials</span><span class=\"o\">(</span><span class=\"s\">&quot;Peter&quot;</span><span class=\"o\">,</span> <span class=\"s\">&quot;pan&quot;</span><span class=\"o\">)</span>\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/secured&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span>\n  <span class=\"n\">addCredentials</span><span class=\"o\">(</span><span class=\"n\">invalidCredentials</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span>  <span class=\"c1\">// adds Authorization header</span>\n  <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n    <span class=\"n\">status</span> <span class=\"o\">===</span> <span class=\"nc\">StatusCodes</span><span class=\"o\">.</span><span class=\"nc\">Unauthorized</span>\n    <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;The supplied authentication is invalid&quot;</span>\n    <span class=\"n\">header</span><span class=\"o\">[</span><span class=\"kt\">HttpHeaders.`WWW-Authenticate`</span><span class=\"o\">].</span><span class=\"n\">get</span><span class=\"o\">.</span><span class=\"n\">challenges</span><span class=\"o\">.</span><span class=\"n\">head</span> <span class=\"o\">===</span> <span class=\"nc\">HttpChallenge</span><span class=\"o\">(</span><span class=\"s\">&quot;Basic&quot;</span><span class=\"o\">,</span> <span class=\"s\">&quot;secure site&quot;</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"from-ldap\">\n<h4>From LDAP</h4>\n<p>(todo)</p>\n</div>\n</div>\n</div>\n</div>\n", "display_toc": true, "title": "authenticate", "sourcename": "", "customsidebar": null, "current_page_name": "documentation/spray-routing/security-directives/authenticate", "next": {"link": "../authorize/", "title": "authorize"}, "rellinks": [["genindex", "General Index", "I", "index"], ["documentation/spray-routing/security-directives/authorize", "authorize", "N", "next"], ["documentation/spray-routing/security-directives/index", "SecurityDirectives", "P", "previous"]], "meta": {}, "parents": [{"link": "../../../", "title": "Documentation"}, {"link": "../../", "title": "spray-routing"}, {"link": "../../predefined-directives-by-trait/", "title": "Predefined Directives (by trait)"}, {"link": "../", "title": "SecurityDirectives"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">authenticate</a><ul>\n<li><a class=\"reference internal\" href=\"#signature\">Signature</a></li>\n<li><a class=\"reference internal\" href=\"#description\">Description</a><ul>\n<li><a class=\"reference internal\" href=\"#http-basic-authentication\">HTTP Basic Authentication</a><ul>\n<li><a class=\"reference internal\" href=\"#implementing-a-userpassauthenticator\">Implementing a <tt class=\"docutils literal\"><span class=\"pre\">UserPassAuthenticator</span></tt></a></li>\n<li><a class=\"reference internal\" href=\"#from-configuration\">From configuration</a></li>\n<li><a class=\"reference internal\" href=\"#from-ldap\">From LDAP</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../", "title": "SecurityDirectives"}, "metatags": ""}