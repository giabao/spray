{"body": "<div class=\"section\" id=\"parameters\">\n<span id=\"id1\"></span><h1>parameters</h1>\n<p>The parameters directive filters on the existence of several query parameters and extract their values.</p>\n<div class=\"section\" id=\"signature\">\n<h2>Signature</h2>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"n\">parameters</span><span class=\"o\">(</span><span class=\"n\">param</span><span class=\"k\">:</span> <span class=\"kt\">&lt;ParamDef</span><span class=\"o\">[</span><span class=\"kt\">T</span><span class=\"o\">]&gt;)</span><span class=\"k\">:</span> <span class=\"kt\">Directive1</span><span class=\"o\">[</span><span class=\"kt\">T</span><span class=\"o\">]</span>\n<span class=\"k\">def</span> <span class=\"n\">parameters</span><span class=\"o\">(</span><span class=\"n\">params</span><span class=\"k\">:</span> <span class=\"kt\">&lt;ParamDef</span><span class=\"o\">[</span><span class=\"kt\">T_i</span><span class=\"o\">]&gt;*)</span><span class=\"k\">:</span> <span class=\"kt\">Directive</span><span class=\"o\">[</span><span class=\"kt\">T_0</span> <span class=\"kt\">::</span> <span class=\"kt\">...</span> <span class=\"kt\">T_i</span> <span class=\"kt\">...</span> <span class=\"kt\">::</span> <span class=\"kt\">HNil</span><span class=\"o\">]</span>\n<span class=\"k\">def</span> <span class=\"n\">parameters</span><span class=\"o\">(</span><span class=\"n\">params</span><span class=\"k\">:</span> <span class=\"kt\">&lt;ParamDef</span><span class=\"o\">[</span><span class=\"kt\">T_0</span><span class=\"o\">]&gt;</span> <span class=\"o\">::</span> <span class=\"o\">...</span> <span class=\"o\">&lt;</span><span class=\"nc\">ParamDef</span><span class=\"o\">[</span><span class=\"kt\">T_i</span><span class=\"o\">]&gt;</span> <span class=\"o\">...</span> <span class=\"o\">::</span> <span class=\"nc\">HNil</span><span class=\"o\">)</span><span class=\"k\">:</span> <span class=\"kt\">Directive</span><span class=\"o\">[</span><span class=\"kt\">T_0</span> <span class=\"kt\">::</span> <span class=\"kt\">...</span> <span class=\"kt\">T_i</span> <span class=\"kt\">...</span> <span class=\"kt\">::</span> <span class=\"kt\">HNil</span><span class=\"o\">]</span>\n</pre></div>\n</div>\n<p>The signature shown is simplified and written in pseudo-syntax, the real signature uses magnets. <a class=\"footnote-reference\" href=\"#id3\" id=\"id2\">[1]</a> The type\n<tt class=\"docutils literal\"><span class=\"pre\">&lt;ParamDef&gt;</span></tt> doesn&#8217;t really exist but consists of the syntactic variants as shown in the description and the examples.</p>\n<table class=\"docutils footnote\" frame=\"void\" id=\"id3\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id2\">[1]</a></td><td>See <a class=\"reference external\" href=\"/blog/2012-12-13-the-magnet-pattern/\">The Magnet Pattern</a> for an explanation of magnet-based overloading.</td></tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"description\">\n<h2>Description</h2>\n<p>Query parameters can be either extracted as a String or can be converted to another type. The parameter name\ncan be supplied either as a String or as a Symbol. Parameter extraction can be modified to mark a query parameter\nas required or optional or to filter requests where a parameter has a certain value:</p>\n<dl class=\"docutils\">\n<dt><tt class=\"docutils literal\"><span class=\"pre\">&quot;color&quot;</span></tt></dt>\n<dd>extract value of parameter &#8220;color&#8221; as <tt class=\"docutils literal\"><span class=\"pre\">String</span></tt></dd>\n<dt><tt class=\"docutils literal\"><span class=\"pre\">&quot;color&quot;.?</span></tt></dt>\n<dd>extract optional value of parameter &#8220;color&#8221; as <tt class=\"docutils literal\"><span class=\"pre\">Option[String]</span></tt></dd>\n<dt><tt class=\"docutils literal\"><span class=\"pre\">&quot;color&quot;</span> <span class=\"pre\">?</span> <span class=\"pre\">&quot;red&quot;</span></tt></dt>\n<dd>extract optional value of parameter &#8220;color&#8221; as <tt class=\"docutils literal\"><span class=\"pre\">String</span></tt> with default value <tt class=\"docutils literal\"><span class=\"pre\">&quot;red&quot;</span></tt></dd>\n<dt><tt class=\"docutils literal\"><span class=\"pre\">&quot;color&quot;</span> <span class=\"pre\">!</span> <span class=\"pre\">&quot;blue&quot;</span></tt></dt>\n<dd>require value of parameter &#8220;color&#8221; to be <tt class=\"docutils literal\"><span class=\"pre\">&quot;blue&quot;</span></tt> and extract nothing</dd>\n<dt><tt class=\"docutils literal\"><span class=\"pre\">&quot;amount&quot;.as[Int]</span></tt></dt>\n<dd>extract value of parameter &#8220;amount&#8221; as <tt class=\"docutils literal\"><span class=\"pre\">Int</span></tt>, you need a matching <tt class=\"docutils literal\"><span class=\"pre\">Deserializer</span></tt> in scope for that to work\n(see also <a class=\"reference internal\" href=\"../../../spray-httpx/unmarshalling/#unmarshalling\"><em>Unmarshalling</em></a>)</dd>\n<dt><tt class=\"docutils literal\"><span class=\"pre\">&quot;amount&quot;.as(deserializer)</span></tt></dt>\n<dd>extract value of parameter &#8220;amount&#8221; with an explicit <tt class=\"docutils literal\"><span class=\"pre\">Deserializer</span></tt></dd>\n</dl>\n<p>You can use <a class=\"reference internal\" href=\"../../advanced-topics/case-class-extraction/#case-class-extraction\"><em>Case Class Extraction</em></a> to group several extracted values together into a case-class\ninstance.</p>\n<p>Requests missing a required parameter or parameter value will be rejected with an appropriate rejection.</p>\n<p>There&#8217;s also a singular version, <a class=\"reference internal\" href=\"../parameter/#parameter\"><em>parameter</em></a>. Form fields can be handled in a similar way, see <tt class=\"docutils literal\"><span class=\"pre\">formFields</span></tt>. If\nyou want unified handling for both query parameters and form fields, see <tt class=\"docutils literal\"><span class=\"pre\">anyParams</span></tt>.</p>\n</div>\n<div class=\"section\" id=\"examples\">\n<h2>Examples</h2>\n<div class=\"section\" id=\"required-parameter\">\n<h3>Required parameter</h3>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">val</span> <span class=\"n\">route</span> <span class=\"k\">=</span>\n  <span class=\"n\">parameters</span><span class=\"o\">(</span><span class=\"-Symbol\">&#39;color</span><span class=\"o\">,</span> <span class=\"-Symbol\">&#39;backgroundColor</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"o\">(</span><span class=\"n\">color</span><span class=\"o\">,</span> <span class=\"n\">backgroundColor</span><span class=\"o\">)</span> <span class=\"k\">=&gt;</span>\n    <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"s\">&quot;The color is &#39;$color&#39; and the background is &#39;$backgroundColor&#39;&quot;</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/?color=blue&amp;backgroundColor=red&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;The color is &#39;blue&#39; and the background is &#39;red&#39;&quot;</span>\n<span class=\"o\">}</span>\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/?color=blue&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">sealRoute</span><span class=\"o\">(</span><span class=\"n\">route</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">status</span> <span class=\"o\">===</span> <span class=\"nc\">StatusCodes</span><span class=\"o\">.</span><span class=\"nc\">NotFound</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;Request is missing required query parameter &#39;backgroundColor&#39;&quot;</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"optional-parameter\">\n<h3>Optional parameter</h3>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">val</span> <span class=\"n\">route</span> <span class=\"k\">=</span>\n  <span class=\"n\">parameters</span><span class=\"o\">(</span><span class=\"-Symbol\">&#39;color</span><span class=\"o\">,</span> <span class=\"-Symbol\">&#39;backgroundColor</span><span class=\"o\">.?)</span> <span class=\"o\">{</span> <span class=\"o\">(</span><span class=\"n\">color</span><span class=\"o\">,</span> <span class=\"n\">backgroundColor</span><span class=\"o\">)</span> <span class=\"k\">=&gt;</span>\n    <span class=\"k\">val</span> <span class=\"n\">backgroundStr</span> <span class=\"k\">=</span> <span class=\"n\">backgroundColor</span><span class=\"o\">.</span><span class=\"n\">getOrElse</span><span class=\"o\">(</span><span class=\"s\">&quot;&lt;undefined&gt;&quot;</span><span class=\"o\">)</span>\n    <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"s\">&quot;The color is &#39;$color&#39; and the background is &#39;$backgroundStr&#39;&quot;</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/?color=blue&amp;backgroundColor=red&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;The color is &#39;blue&#39; and the background is &#39;red&#39;&quot;</span>\n<span class=\"o\">}</span>\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/?color=blue&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;The color is &#39;blue&#39; and the background is &#39;&lt;undefined&gt;&#39;&quot;</span>\n<span class=\"o\">}</span>\n<span class=\"k\">val</span> <span class=\"n\">route</span> <span class=\"k\">=</span>\n  <span class=\"n\">parameters</span><span class=\"o\">(</span><span class=\"-Symbol\">&#39;color</span><span class=\"o\">,</span> <span class=\"-Symbol\">&#39;backgroundColor</span> <span class=\"o\">?</span> <span class=\"s\">&quot;white&quot;</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"o\">(</span><span class=\"n\">color</span><span class=\"o\">,</span> <span class=\"n\">backgroundColor</span><span class=\"o\">)</span> <span class=\"k\">=&gt;</span>\n    <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"s\">&quot;The color is &#39;$color&#39; and the background is &#39;$backgroundColor&#39;&quot;</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/?color=blue&amp;backgroundColor=red&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;The color is &#39;blue&#39; and the background is &#39;red&#39;&quot;</span>\n<span class=\"o\">}</span>\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/?color=blue&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;The color is &#39;blue&#39; and the background is &#39;white&#39;&quot;</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"optional-parameter-with-default-value\">\n<h3>Optional parameter with default value</h3>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">val</span> <span class=\"n\">route</span> <span class=\"k\">=</span>\n  <span class=\"n\">parameters</span><span class=\"o\">(</span><span class=\"-Symbol\">&#39;color</span><span class=\"o\">,</span> <span class=\"-Symbol\">&#39;backgroundColor</span> <span class=\"o\">?</span> <span class=\"s\">&quot;white&quot;</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"o\">(</span><span class=\"n\">color</span><span class=\"o\">,</span> <span class=\"n\">backgroundColor</span><span class=\"o\">)</span> <span class=\"k\">=&gt;</span>\n    <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"s\">&quot;The color is &#39;$color&#39; and the background is &#39;$backgroundColor&#39;&quot;</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/?color=blue&amp;backgroundColor=red&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;The color is &#39;blue&#39; and the background is &#39;red&#39;&quot;</span>\n<span class=\"o\">}</span>\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/?color=blue&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;The color is &#39;blue&#39; and the background is &#39;white&#39;&quot;</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"parameter-with-required-value\">\n<h3>Parameter with required value</h3>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">val</span> <span class=\"n\">route</span> <span class=\"k\">=</span>\n  <span class=\"n\">parameters</span><span class=\"o\">(</span><span class=\"-Symbol\">&#39;color</span><span class=\"o\">,</span> <span class=\"-Symbol\">&#39;action</span> <span class=\"o\">!</span> <span class=\"s\">&quot;true&quot;</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"o\">(</span><span class=\"n\">color</span><span class=\"o\">)</span> <span class=\"k\">=&gt;</span>\n    <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"s\">&quot;The color is &#39;$color&#39;.&quot;</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/?color=blue&amp;action=true&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;The color is &#39;blue&#39;.&quot;</span>\n<span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/?color=blue&amp;action=false&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">sealRoute</span><span class=\"o\">(</span><span class=\"n\">route</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">status</span> <span class=\"o\">===</span> <span class=\"nc\">StatusCodes</span><span class=\"o\">.</span><span class=\"nc\">NotFound</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;The requested resource could not be found.&quot;</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"deserialized-parameter\">\n<h3>Deserialized parameter</h3>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">val</span> <span class=\"n\">route</span> <span class=\"k\">=</span>\n  <span class=\"n\">parameters</span><span class=\"o\">(</span><span class=\"-Symbol\">&#39;color</span><span class=\"o\">,</span> <span class=\"-Symbol\">&#39;count</span><span class=\"o\">.</span><span class=\"n\">as</span><span class=\"o\">[</span><span class=\"kt\">Int</span><span class=\"o\">])</span> <span class=\"o\">{</span> <span class=\"o\">(</span><span class=\"n\">color</span><span class=\"o\">,</span> <span class=\"n\">count</span><span class=\"o\">)</span> <span class=\"k\">=&gt;</span>\n    <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"s\">&quot;The color is &#39;$color&#39; and you have $count of it.&quot;</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/?color=blue&amp;count=42&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;The color is &#39;blue&#39; and you have 42 of it.&quot;</span>\n<span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/?color=blue&amp;count=blub&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">sealRoute</span><span class=\"o\">(</span><span class=\"n\">route</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">status</span> <span class=\"o\">===</span> <span class=\"nc\">StatusCodes</span><span class=\"o\">.</span><span class=\"nc\">BadRequest</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;The query parameter &#39;count&#39; was malformed:\\n&#39;blub&#39; is not a valid 32-bit integer value&quot;</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n</div>\n</div>\n</div>\n", "display_toc": true, "title": "parameters", "sourcename": "", "customsidebar": null, "current_page_name": "documentation/spray-routing/parameter-directives/parameters", "next": {"link": "../parameterSeq/", "title": "parameterSeq"}, "rellinks": [["genindex", "General Index", "I", "index"], ["documentation/spray-routing/parameter-directives/parameterSeq", "parameterSeq", "N", "next"], ["documentation/spray-routing/parameter-directives/parameterMultiMap", "parameterMultiMap", "P", "previous"]], "meta": {}, "parents": [{"link": "../../../", "title": "Documentation"}, {"link": "../../", "title": "spray-routing"}, {"link": "../../predefined-directives-by-trait/", "title": "Predefined Directives (by trait)"}, {"link": "../", "title": "ParameterDirectives"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">parameters</a><ul>\n<li><a class=\"reference internal\" href=\"#signature\">Signature</a></li>\n<li><a class=\"reference internal\" href=\"#description\">Description</a></li>\n<li><a class=\"reference internal\" href=\"#examples\">Examples</a><ul>\n<li><a class=\"reference internal\" href=\"#required-parameter\">Required parameter</a></li>\n<li><a class=\"reference internal\" href=\"#optional-parameter\">Optional parameter</a></li>\n<li><a class=\"reference internal\" href=\"#optional-parameter-with-default-value\">Optional parameter with default value</a></li>\n<li><a class=\"reference internal\" href=\"#parameter-with-required-value\">Parameter with required value</a></li>\n<li><a class=\"reference internal\" href=\"#deserialized-parameter\">Deserialized parameter</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../parameterMultiMap/", "title": "parameterMultiMap"}, "metatags": ""}