{"body": "<div class=\"section\" id=\"autochunk\">\n<span id=\"id1\"></span><h1>autoChunk</h1>\n<p>Converts unchunked responses coming back from its inner route into chunked responses of which each chunk\nis smaller or equal to the given size if the response entity is at least as large as the given threshold.</p>\n<div class=\"section\" id=\"signature\">\n<h2>Signature</h2>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"n\">autoChunk</span><span class=\"o\">(</span><span class=\"n\">maxChunkSize</span><span class=\"k\">:</span> <span class=\"kt\">Long</span><span class=\"o\">)(</span><span class=\"k\">implicit</span> <span class=\"n\">factory</span><span class=\"k\">:</span> <span class=\"kt\">ActorRefFactory</span><span class=\"o\">)</span><span class=\"k\">:</span> <span class=\"kt\">Directive0</span>\n<span class=\"k\">def</span> <span class=\"n\">autoChunk</span><span class=\"o\">(</span><span class=\"n\">threshold</span><span class=\"k\">:</span> <span class=\"kt\">Long</span><span class=\"o\">,</span> <span class=\"n\">maxChunkSize</span><span class=\"k\">:</span> <span class=\"kt\">Long</span><span class=\"o\">)(</span><span class=\"k\">implicit</span> <span class=\"n\">factory</span><span class=\"k\">:</span> <span class=\"kt\">ActorRefFactory</span><span class=\"o\">)</span><span class=\"k\">:</span> <span class=\"kt\">Directive0</span>\n<span class=\"k\">def</span> <span class=\"n\">autoChunk</span><span class=\"o\">(</span><span class=\"n\">magnet</span><span class=\"k\">:</span> <span class=\"kt\">ChunkSizeMagnet</span><span class=\"o\">)</span><span class=\"k\">:</span> <span class=\"kt\">Directive0</span>\n</pre></div>\n</div>\n<p>The signature shown is simplified, the real signature uses magnets. <a class=\"footnote-reference\" href=\"#id3\" id=\"id2\">[1]</a></p>\n<table class=\"docutils footnote\" frame=\"void\" id=\"id3\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id2\">[1]</a></td><td>See <a class=\"reference external\" href=\"/blog/2012-12-13-the-magnet-pattern/\">The Magnet Pattern</a> for an explanation of magnet-based overloading.</td></tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"description\">\n<h2>Description</h2>\n<p>The parameter of type <tt class=\"docutils literal\"><span class=\"pre\">ChunkSizeMagnet</span></tt> decides for which values of <tt class=\"docutils literal\"><span class=\"pre\">HttpData</span></tt> the directive should apply and\nhow to chunk the data. Predefined instances of <tt class=\"docutils literal\"><span class=\"pre\">ChunkSizeMagnet</span></tt> decide this on the basis of two\nparameters, the threshold size and the chunk size (if only one number is supplied it is used for both values). The\nthreshold parameter decides from which size on an entity should be converted into a chunked request. The chunk size\nparameter decides how big each chunk should be at most.</p>\n<p>See the <a class=\"reference internal\" href=\"../autoChunkFileBytes/#autochunkfilebytes\"><em>autoChunkFileBytes</em></a> directive for an alternative that adds another restriction to chunk a response only\nwhen it consists only of <tt class=\"docutils literal\"><span class=\"pre\">FileBytes</span></tt>, i.e. it is completely backed by a file.</p>\n<p>Auto chunking is especially effective in combination with encoding. Encoding (gzip, deflate) always encodes the complete\nresponse part in one step. For big entities this can be a disadvantage especially when the data has to be read from a file\ninto JVM heap buffers. Auto chunking helps here because it produces a lazy stream of response chunks that can be encoded\none by one by an encoder so that only one chunk is loaded into the JVM heap at one time.</p>\n</div>\n<div class=\"section\" id=\"example\">\n<h2>Example</h2>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">val</span> <span class=\"n\">route</span> <span class=\"k\">=</span>\n  <span class=\"n\">autoChunk</span><span class=\"o\">(</span><span class=\"mi\">5</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"n\">path</span><span class=\"o\">(</span><span class=\"s\">&quot;long&quot;</span><span class=\"o\">)(</span><span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"s\">&quot;This is a long text&quot;</span><span class=\"o\">))</span> <span class=\"o\">~</span>\n    <span class=\"n\">path</span><span class=\"o\">(</span><span class=\"s\">&quot;short&quot;</span><span class=\"o\">)(</span><span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"s\">&quot;Short&quot;</span><span class=\"o\">))</span>\n  <span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/short&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;Short&quot;</span>\n<span class=\"o\">}</span>\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/long&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"k\">val</span> <span class=\"nc\">HttpResponse</span><span class=\"o\">(</span><span class=\"k\">_</span><span class=\"o\">,</span> <span class=\"n\">c0</span><span class=\"o\">,</span> <span class=\"k\">_</span><span class=\"o\">,</span> <span class=\"k\">_</span><span class=\"o\">)</span> <span class=\"k\">=</span> <span class=\"n\">response</span>\n  <span class=\"k\">val</span> <span class=\"nc\">List</span><span class=\"o\">(</span><span class=\"n\">c1</span><span class=\"o\">,</span> <span class=\"n\">c2</span><span class=\"o\">,</span> <span class=\"n\">c3</span><span class=\"o\">)</span> <span class=\"k\">=</span> <span class=\"n\">chunks</span>\n  <span class=\"n\">c0</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"o\">===</span> <span class=\"nc\">HttpData</span><span class=\"o\">(</span><span class=\"s\">&quot;This &quot;</span><span class=\"o\">)</span>\n  <span class=\"n\">c1</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"o\">===</span> <span class=\"nc\">HttpData</span><span class=\"o\">(</span><span class=\"s\">&quot;is a &quot;</span><span class=\"o\">)</span>\n  <span class=\"n\">c2</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"o\">===</span> <span class=\"nc\">HttpData</span><span class=\"o\">(</span><span class=\"s\">&quot;long &quot;</span><span class=\"o\">)</span>\n  <span class=\"n\">c3</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"o\">===</span> <span class=\"nc\">HttpData</span><span class=\"o\">(</span><span class=\"s\">&quot;text&quot;</span><span class=\"o\">)</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n</div>\n</div>\n", "display_toc": true, "title": "autoChunk", "sourcename": "", "customsidebar": null, "current_page_name": "documentation/spray-routing/chunking-directives/autoChunk", "next": {"link": "../autoChunkFileBytes/", "title": "autoChunkFileBytes"}, "rellinks": [["genindex", "General Index", "I", "index"], ["documentation/spray-routing/chunking-directives/autoChunkFileBytes", "autoChunkFileBytes", "N", "next"], ["documentation/spray-routing/chunking-directives/index", "ChunkingDirectives", "P", "previous"]], "meta": {}, "parents": [{"link": "../../../", "title": "Documentation"}, {"link": "../../", "title": "spray-routing"}, {"link": "../../predefined-directives-by-trait/", "title": "Predefined Directives (by trait)"}, {"link": "../", "title": "ChunkingDirectives"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">autoChunk</a><ul>\n<li><a class=\"reference internal\" href=\"#signature\">Signature</a></li>\n<li><a class=\"reference internal\" href=\"#description\">Description</a></li>\n<li><a class=\"reference internal\" href=\"#example\">Example</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../", "title": "ChunkingDirectives"}, "metatags": ""}