{"body": "<div class=\"section\" id=\"headervaluepf\">\n<span id=\"id1\"></span><h1>headerValuePF</h1>\n<p>Calls the specified partial function with the first request header the function is <tt class=\"docutils literal\"><span class=\"pre\">isDefinedAt</span></tt> and extracts the\nresult of calling the function.</p>\n<div class=\"section\" id=\"signature\">\n<h2>Signature</h2>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"n\">headerValuePF</span><span class=\"o\">[</span><span class=\"kt\">T</span><span class=\"o\">](</span><span class=\"n\">pf</span><span class=\"k\">:</span> <span class=\"kt\">PartialFunction</span><span class=\"o\">[</span><span class=\"kt\">HttpHeader</span>, <span class=\"kt\">T</span><span class=\"o\">])</span><span class=\"k\">:</span> <span class=\"kt\">Directive1</span><span class=\"o\">[</span><span class=\"kt\">T</span><span class=\"o\">]</span> \n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"description\">\n<h2>Description</h2>\n<p>The <tt class=\"docutils literal\"><span class=\"pre\">headerValuePF</span></tt> directive is an alternative syntax version of <tt class=\"docutils literal\"><span class=\"pre\">headerValue</span></tt>.  If the function throws an\nexception the request is rejected with a <tt class=\"docutils literal\"><span class=\"pre\">MalformedHeaderRejection</span></tt>. If the function is not defined for\nany header the request is rejected as &#8220;NotFound&#8221;.</p>\n</div>\n<div class=\"section\" id=\"example\">\n<h2>Example</h2>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"n\">extractHostPort</span><span class=\"k\">:</span> <span class=\"kt\">PartialFunction</span><span class=\"o\">[</span><span class=\"kt\">HttpHeader</span>, <span class=\"kt\">Int</span><span class=\"o\">]</span> <span class=\"k\">=</span> <span class=\"o\">{</span>\n  <span class=\"k\">case</span> <span class=\"n\">h</span><span class=\"k\">:</span> <span class=\"kt\">`Host`</span><span class=\"o\">=&gt;</span> <span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">port</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">val</span> <span class=\"n\">route</span> <span class=\"k\">=</span>\n  <span class=\"n\">headerValuePF</span><span class=\"o\">(</span><span class=\"n\">extractHostPort</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"n\">port</span> <span class=\"k\">=&gt;</span>\n    <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"s\">&quot;The port was $port&quot;</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"nc\">Host</span><span class=\"o\">(</span><span class=\"s\">&quot;example.com&quot;</span><span class=\"o\">,</span> <span class=\"mi\">5043</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;The port was 5043&quot;</span>\n<span class=\"o\">}</span>\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">sealRoute</span><span class=\"o\">(</span><span class=\"n\">route</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">status</span> <span class=\"o\">===</span> <span class=\"nc\">NotFound</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;The requested resource could not be found.&quot;</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n</div>\n</div>\n", "display_toc": true, "title": "headerValuePF", "sourcename": "", "customsidebar": null, "current_page_name": "documentation/spray-routing/header-directives/headerValuePF", "next": {"link": "../optionalHeaderValue/", "title": "optionalHeaderValue"}, "rellinks": [["genindex", "General Index", "I", "index"], ["documentation/spray-routing/header-directives/optionalHeaderValue", "optionalHeaderValue", "N", "next"], ["documentation/spray-routing/header-directives/headerValueByName", "headerValueByName", "P", "previous"]], "meta": {}, "parents": [{"link": "../../../", "title": "Documentation"}, {"link": "../../", "title": "spray-routing"}, {"link": "../../predefined-directives-by-trait/", "title": "Predefined Directives (by trait)"}, {"link": "../", "title": "HeaderDirectives"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">headerValuePF</a><ul>\n<li><a class=\"reference internal\" href=\"#signature\">Signature</a></li>\n<li><a class=\"reference internal\" href=\"#description\">Description</a></li>\n<li><a class=\"reference internal\" href=\"#example\">Example</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../headerValueByName/", "title": "headerValueByName"}, "metatags": ""}