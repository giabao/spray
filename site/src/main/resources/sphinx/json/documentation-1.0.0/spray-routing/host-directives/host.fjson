{"body": "<div class=\"section\" id=\"host\">\n<span id=\"id1\"></span><h1>host</h1>\n<p>Filter requests matching conditions against the hostname part of the Host header value\nin the request.</p>\n<div class=\"section\" id=\"signature\">\n<h2>Signature</h2>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"n\">host</span><span class=\"o\">(</span><span class=\"n\">hostNames</span><span class=\"k\">:</span> <span class=\"kt\">String*</span><span class=\"o\">)</span><span class=\"k\">:</span> <span class=\"kt\">Directive0</span> \n<span class=\"k\">def</span> <span class=\"n\">host</span><span class=\"o\">(</span><span class=\"n\">predicate</span><span class=\"k\">:</span> <span class=\"kt\">String</span> <span class=\"k\">\u21d2</span> <span class=\"kt\">Boolean</span><span class=\"o\">)</span><span class=\"k\">:</span> <span class=\"kt\">Directive0</span> \n<span class=\"k\">def</span> <span class=\"n\">host</span><span class=\"o\">(</span><span class=\"n\">regex</span><span class=\"k\">:</span> <span class=\"kt\">Regex</span><span class=\"o\">)</span><span class=\"k\">:</span> <span class=\"kt\">Directive1</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> \n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"description\">\n<h2>Description</h2>\n<p>The <tt class=\"docutils literal\"><span class=\"pre\">def</span> <span class=\"pre\">host(hostNames:</span> <span class=\"pre\">String*)</span></tt> overload rejects all requests with a hostname different from the given ones.</p>\n<p>The <tt class=\"docutils literal\"><span class=\"pre\">def</span> <span class=\"pre\">host(predicate:</span> <span class=\"pre\">String</span> <span class=\"pre\">\u21d2</span> <span class=\"pre\">Boolean)</span></tt> overload rejects all requests for which the hostname does\nnot satisfy the given predicate.</p>\n<p>The <tt class=\"docutils literal\"><span class=\"pre\">def</span> <span class=\"pre\">host(regex:</span> <span class=\"pre\">Regex)</span></tt> overload works a little bit different: it rejects all requests with a hostname\nthat doesn&#8217;t have a prefix matching the given regular expression and also extracts a <tt class=\"docutils literal\"><span class=\"pre\">String</span></tt> to its\ninner route following this rules:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>For all matching requests the prefix string matching the regex is extracted and passed to the inner route.</li>\n<li>If the regex contains a capturing group only the string matched by this group is extracted.</li>\n<li>If the regex contains more than one capturing group an <tt class=\"docutils literal\"><span class=\"pre\">IllegalArgumentException</span></tt> is thrown.</li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"example\">\n<h2>Example</h2>\n<p>Matching a list of hosts:</p>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">val</span> <span class=\"n\">route</span> <span class=\"k\">=</span>\n  <span class=\"n\">host</span><span class=\"o\">(</span><span class=\"s\">&quot;api.company.com&quot;</span><span class=\"o\">,</span> <span class=\"s\">&quot;rest.company.com&quot;</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"s\">&quot;Ok&quot;</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">()</span> <span class=\"o\">~&gt;</span> <span class=\"nc\">Host</span><span class=\"o\">(</span><span class=\"s\">&quot;rest.company.com&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">status</span> <span class=\"o\">===</span> <span class=\"nc\">OK</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;Ok&quot;</span>\n<span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">()</span> <span class=\"o\">~&gt;</span> <span class=\"nc\">Host</span><span class=\"o\">(</span><span class=\"s\">&quot;notallowed.company.com&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">handled</span> <span class=\"n\">must</span> <span class=\"n\">beFalse</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n<p>Making sure the host satisfies the given predicate</p>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">val</span> <span class=\"n\">shortOnly</span><span class=\"k\">:</span> <span class=\"kt\">String</span> <span class=\"o\">=&gt;</span> <span class=\"nc\">Boolean</span> <span class=\"k\">=</span> <span class=\"o\">(</span><span class=\"n\">hostname</span><span class=\"o\">)</span> <span class=\"k\">=&gt;</span> <span class=\"n\">hostname</span><span class=\"o\">.</span><span class=\"n\">length</span> <span class=\"o\">&lt;</span> <span class=\"mi\">10</span>\n\n<span class=\"k\">val</span> <span class=\"n\">route</span> <span class=\"k\">=</span>\n  <span class=\"n\">host</span><span class=\"o\">(</span><span class=\"n\">shortOnly</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"s\">&quot;Ok&quot;</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">()</span> <span class=\"o\">~&gt;</span> <span class=\"nc\">Host</span><span class=\"o\">(</span><span class=\"s\">&quot;short.com&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">status</span> <span class=\"o\">===</span> <span class=\"nc\">OK</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;Ok&quot;</span>\n<span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">()</span> <span class=\"o\">~&gt;</span> <span class=\"nc\">Host</span><span class=\"o\">(</span><span class=\"s\">&quot;verylonghostname.com&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">handled</span> <span class=\"n\">must</span> <span class=\"n\">beFalse</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n<p>Using a regular expressions:</p>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">val</span> <span class=\"n\">route</span> <span class=\"k\">=</span>\n  <span class=\"n\">host</span><span class=\"o\">(</span><span class=\"s\">&quot;api|rest&quot;</span><span class=\"o\">.</span><span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"n\">prefix</span> <span class=\"k\">=&gt;</span>\n    <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"s\">&quot;Extracted prefix: $prefix&quot;</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span> <span class=\"o\">~</span>\n  <span class=\"n\">host</span><span class=\"o\">(</span><span class=\"s\">&quot;public.(my|your)company.com&quot;</span><span class=\"o\">.</span><span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"n\">captured</span> <span class=\"k\">=&gt;</span>\n    <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"s\">&quot;You came through $captured company&quot;</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">()</span> <span class=\"o\">~&gt;</span> <span class=\"nc\">Host</span><span class=\"o\">(</span><span class=\"s\">&quot;api.company.com&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">status</span> <span class=\"o\">===</span> <span class=\"nc\">OK</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;Extracted prefix: api&quot;</span>\n<span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">()</span> <span class=\"o\">~&gt;</span> <span class=\"nc\">Host</span><span class=\"o\">(</span><span class=\"s\">&quot;public.mycompany.com&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">status</span> <span class=\"o\">===</span> <span class=\"nc\">OK</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;You came through my company&quot;</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n<p>Beware that in the case of introducing multiple capturing groups in the regex such as in the case bellow, the\ndirective will fail at runtime, at the moment the route tree is evaluated for the first time. This might cause\nyour http handler actor to enter in a fail/restart loop depending on your supervision strategy.</p>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"o\">{</span>\n  <span class=\"n\">host</span><span class=\"o\">(</span><span class=\"s\">&quot;server-([0-9]).company.(com|net|org)&quot;</span><span class=\"o\">.</span><span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"n\">target</span> <span class=\"k\">=&gt;</span>\n    <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"s\">&quot;Will never complete :&#39;(&quot;</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span> <span class=\"n\">must</span> <span class=\"n\">throwAn</span><span class=\"o\">[</span><span class=\"kt\">IllegalArgumentException</span><span class=\"o\">]</span>\n</pre></div>\n</div>\n</div>\n</div>\n", "display_toc": true, "title": "host", "sourcename": "", "customsidebar": null, "current_page_name": "documentation/spray-routing/host-directives/host", "next": {"link": "../hostName/", "title": "hostName"}, "rellinks": [["genindex", "General Index", "I", "index"], ["documentation/spray-routing/host-directives/hostName", "hostName", "N", "next"], ["documentation/spray-routing/host-directives/index", "HostDirectives", "P", "previous"]], "meta": {}, "parents": [{"link": "../../../", "title": "Documentation"}, {"link": "../../", "title": "spray-routing"}, {"link": "../../predefined-directives-by-trait/", "title": "Predefined Directives (by trait)"}, {"link": "../", "title": "HostDirectives"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">host</a><ul>\n<li><a class=\"reference internal\" href=\"#signature\">Signature</a></li>\n<li><a class=\"reference internal\" href=\"#description\">Description</a></li>\n<li><a class=\"reference internal\" href=\"#example\">Example</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../", "title": "HostDirectives"}, "metatags": ""}