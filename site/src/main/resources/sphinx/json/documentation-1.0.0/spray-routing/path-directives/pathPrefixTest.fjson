{"body": "<div class=\"section\" id=\"pathprefixtest\">\n<span id=\"id1\"></span><h1>pathPrefixTest</h1>\n<p>Checks whether the unmatched path of the <tt class=\"docutils literal\"><span class=\"pre\">RequestContext</span></tt> has a prefix matched by the given <tt class=\"docutils literal\"><span class=\"pre\">PathMatcher</span></tt>.\nPotentially extracts one or more values (depending on the type of the argument) but doesn&#8217;t consume its match from\nthe unmatched path.</p>\n<div class=\"section\" id=\"signature\">\n<h2>Signature</h2>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"n\">pathPrefixTest</span><span class=\"o\">[</span><span class=\"kt\">L</span> <span class=\"k\">&lt;:</span> <span class=\"kt\">HList</span><span class=\"o\">](</span><span class=\"n\">pm</span><span class=\"k\">:</span> <span class=\"kt\">PathMatcher</span><span class=\"o\">[</span><span class=\"kt\">L</span><span class=\"o\">])</span><span class=\"k\">:</span> <span class=\"kt\">Directive</span><span class=\"o\">[</span><span class=\"kt\">L</span><span class=\"o\">]</span> \n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"description\">\n<h2>Description</h2>\n<p>This directive is very similar to the <a class=\"reference internal\" href=\"../pathPrefix/#pathprefix\"><em>pathPrefix</em></a> directive with the one difference that the path prefix\nit matched (if it matched) is <em>not</em> consumed. The unmatched path of the <tt class=\"docutils literal\"><span class=\"pre\">RequestContext</span></tt> is therefore left as\nis even in the case that the directive successfully matched and the request is passed on to its inner route.</p>\n<p>For more info on how to create a <tt class=\"docutils literal\"><span class=\"pre\">PathMatcher</span></tt> see <a class=\"reference internal\" href=\"../pathmatcher-dsl/#pathmatcher-dsl\"><em>The PathMatcher DSL</em></a>.</p>\n<p>As opposed to its <a class=\"reference internal\" href=\"../rawPathPrefixTest/#rawpathprefixtest\"><em>rawPathPrefixTest</em></a> counterpart <tt class=\"docutils literal\"><span class=\"pre\">pathPrefixTest</span></tt> automatically adds a leading slash to its\n<tt class=\"docutils literal\"><span class=\"pre\">PathMatcher</span></tt> argument, you therefore don&#8217;t have to start your matching expression with an explicit slash.</p>\n<p>Depending on the type of its <tt class=\"docutils literal\"><span class=\"pre\">PathMatcher</span></tt> argument the <tt class=\"docutils literal\"><span class=\"pre\">pathPrefixTest</span></tt> directive extracts zero or more values from\nthe URI. If the match fails the request is rejected with an <a class=\"reference internal\" href=\"../../key-concepts/rejections/#empty-rejections\"><em>empty rejection set</em></a>.</p>\n</div>\n<div class=\"section\" id=\"example\">\n<h2>Example</h2>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">val</span> <span class=\"n\">completeWithUnmatchedPath</span> <span class=\"k\">=</span>\n  <span class=\"n\">unmatchedPath</span> <span class=\"o\">{</span> <span class=\"n\">p</span> <span class=\"k\">=&gt;</span>\n    <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">toString</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n\n<span class=\"k\">val</span> <span class=\"n\">route</span> <span class=\"k\">=</span>\n  <span class=\"n\">pathPrefixTest</span><span class=\"o\">(</span><span class=\"s\">&quot;foo&quot;</span> <span class=\"o\">|</span> <span class=\"s\">&quot;bar&quot;</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"n\">pathPrefix</span><span class=\"o\">(</span><span class=\"s\">&quot;foo&quot;</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"n\">completeWithUnmatchedPath</span> <span class=\"o\">}</span> <span class=\"o\">~</span>\n    <span class=\"n\">pathPrefix</span><span class=\"o\">(</span><span class=\"s\">&quot;bar&quot;</span><span class=\"o\">)</span> <span class=\"o\">{</span> <span class=\"n\">completeWithUnmatchedPath</span> <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/foo/doo&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;/doo&quot;</span>\n<span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/bar/yes&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;/yes&quot;</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n</div>\n</div>\n", "display_toc": true, "title": "pathPrefixTest", "sourcename": "", "customsidebar": null, "current_page_name": "documentation/spray-routing/path-directives/pathPrefixTest", "next": {"link": "../pathSingleSlash/", "title": "pathSingleSlash"}, "rellinks": [["genindex", "General Index", "I", "index"], ["documentation/spray-routing/path-directives/pathSingleSlash", "pathSingleSlash", "N", "next"], ["documentation/spray-routing/path-directives/pathPrefix", "pathPrefix", "P", "previous"]], "meta": {}, "parents": [{"link": "../../../", "title": "Documentation"}, {"link": "../../", "title": "spray-routing"}, {"link": "../../predefined-directives-by-trait/", "title": "Predefined Directives (by trait)"}, {"link": "../", "title": "PathDirectives"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">pathPrefixTest</a><ul>\n<li><a class=\"reference internal\" href=\"#signature\">Signature</a></li>\n<li><a class=\"reference internal\" href=\"#description\">Description</a></li>\n<li><a class=\"reference internal\" href=\"#example\">Example</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../pathPrefix/", "title": "pathPrefix"}, "metatags": ""}