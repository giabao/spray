{"body": "<div class=\"section\" id=\"respondwithmediatype\">\n<span id=\"id1\"></span><h1>respondWithMediaType</h1>\n<p>Overrides the media-type of the response returned by its inner route with the given one.</p>\n<div class=\"section\" id=\"signature\">\n<h2>Signature</h2>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"n\">respondWithMediaType</span><span class=\"o\">(</span><span class=\"n\">mediaType</span><span class=\"k\">:</span> <span class=\"kt\">MediaType</span><span class=\"o\">)</span><span class=\"k\">:</span> <span class=\"kt\">Directive0</span> \n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"description\">\n<h2>Description</h2>\n<p>This directive transforms <tt class=\"docutils literal\"><span class=\"pre\">HttpResponse</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">ChunkedResponseStart</span></tt> messages coming back from its inner route by\noverriding the <tt class=\"docutils literal\"><span class=\"pre\">entity.contentType.mediaType</span></tt> with the given one if the entity is non-empty.\nEmpty response entities are left unchanged.</p>\n<p>If the given media-type is not accepted by the client the request is rejected with an\n<tt class=\"docutils literal\"><span class=\"pre\">UnacceptedResponseContentTypeRejection</span></tt>.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">This directive removes a potentially existing <tt class=\"docutils literal\"><span class=\"pre\">Accept</span></tt> header from the request,\nin order to &#8220;disable&#8221; content negotiation in a potentially running <tt class=\"docutils literal\"><span class=\"pre\">Marshaller</span></tt> in its inner route.\nAlso note that this directive does <em>not</em> change the response entity buffer content in any way,\nit merely overrides the media-type component of the entities Content-Type.</p>\n</div>\n</div>\n<div class=\"section\" id=\"example\">\n<h2>Example</h2>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">import</span> <span class=\"nn\">MediaTypes._</span>\n\n<span class=\"k\">val</span> <span class=\"n\">route</span> <span class=\"k\">=</span>\n  <span class=\"n\">path</span><span class=\"o\">(</span><span class=\"s\">&quot;foo&quot;</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"n\">respondWithMediaType</span><span class=\"o\">(</span><span class=\"n\">`application/json`</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n      <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"s\">&quot;[]&quot;</span><span class=\"o\">)</span> <span class=\"c1\">// marshalled to `text/plain` here</span>\n    <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/foo&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">mediaType</span> <span class=\"o\">===</span> <span class=\"n\">`application/json`</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;[]&quot;</span>\n<span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;/foo&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"nc\">Accept</span><span class=\"o\">(</span><span class=\"nc\">MediaRanges</span><span class=\"o\">.</span><span class=\"n\">`text/*`</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">rejection</span> <span class=\"o\">===</span> <span class=\"nc\">UnacceptedResponseContentTypeRejection</span><span class=\"o\">(</span><span class=\"nc\">ContentType</span><span class=\"o\">(</span><span class=\"n\">`application/json`</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"nc\">Nil</span><span class=\"o\">)</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n</div>\n</div>\n", "display_toc": true, "title": "respondWithMediaType", "sourcename": "", "customsidebar": null, "current_page_name": "documentation/spray-routing/respond-with-directives/respondWithMediaType", "next": {"link": "../respondWithSingletonHeader/", "title": "respondWithSingletonHeader"}, "rellinks": [["genindex", "General Index", "I", "index"], ["documentation/spray-routing/respond-with-directives/respondWithSingletonHeader", "respondWithSingletonHeader", "N", "next"], ["documentation/spray-routing/respond-with-directives/respondWithHeaders", "respondWithHeaders", "P", "previous"]], "meta": {}, "parents": [{"link": "../../../", "title": "Documentation"}, {"link": "../../", "title": "spray-routing"}, {"link": "../../predefined-directives-by-trait/", "title": "Predefined Directives (by trait)"}, {"link": "../", "title": "RespondWithDirectives"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">respondWithMediaType</a><ul>\n<li><a class=\"reference internal\" href=\"#signature\">Signature</a></li>\n<li><a class=\"reference internal\" href=\"#description\">Description</a></li>\n<li><a class=\"reference internal\" href=\"#example\">Example</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../respondWithHeaders/", "title": "respondWithHeaders"}, "metatags": ""}